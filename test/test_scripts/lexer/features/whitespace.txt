func normal_block():
	a
	b
	if deeply_nested:
		if like_very_deeply_nested:
			return

while at_root:
	b

if at_eof:
	if lexer_works:
		cleanup
#expect

Token (FUNC,func)
Token (IDENT,normal_block)
Token (LPAREN,()
Token (RPAREN,))
Token (COLON,:)
Token (NL,NL)
Token (BEGIN,BEGIN)
Token (IDENT,a)
Token (NL,NL)
Token (IDENT,b)
Token (NL,NL)
Token (IF,if)
Token (IDENT,deeply_nested)
Token (COLON,:)
Token (NL,NL)
Token (BEGIN,BEGIN)
Token (IF,if)
Token (IDENT,like_very_deeply_nested)
Token (COLON,:)
Token (NL,NL)
Token (BEGIN,BEGIN)
Token (RETURN,return)
Token (NL,NL)
Token (END,END)
Token (END,END)
Token (END,END)
Token (WHILE,while)
Token (IDENT,at_root)
Token (COLON,:)
Token (NL,NL)
Token (BEGIN,BEGIN)
Token (IDENT,b)
Token (NL,NL)
Token (END,END)
Token (IF,if)
Token (IDENT,at_eof)
Token (COLON,:)
Token (NL,NL)
Token (BEGIN,BEGIN)
Token (IF,if)
Token (IDENT,lexer_works)
Token (COLON,:)
Token (NL,NL)
Token (BEGIN,BEGIN)
Token (IDENT,cleanup)
Token (NL,NL)
Token (END,END)
Token (END,END)
Token (EOF,EOF)
